(()=>{var e={};e.id=252,e.ids=[252],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},38432:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>y,routeModule:()=>m,serverHooks:()=>w,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>h});var t={};s.r(t),s.d(t,{DELETE:()=>v,GET:()=>p,PUT:()=>l,dynamic:()=>d});var i=s(42706),a=s(28203),n=s(45994),o=s(39187),c=s(96330);let u=globalThis.prisma??new c.PrismaClient({log:["error"]}),d="force-dynamic";async function p(e,{params:r}){try{let e=await u.service.findUnique({where:{id:r.id},include:{durations:!0,masseurs:{include:{masseur:{select:{id:!0,name:!0}}}}}});if(!e)return o.NextResponse.json({error:"Service not found"},{status:404});return o.NextResponse.json(e)}catch(e){return console.error("Error fetching service:",e),o.NextResponse.json({error:"Failed to fetch service"},{status:500})}}async function l(e,{params:r}){try{let{name:s,description:t,type:i,category:a,isRecommended:n,recommendOrder:c,durations:d,masseurs:p}=await e.json();await u.$transaction([u.serviceDuration.deleteMany({where:{serviceId:r.id}}),u.masseurService.deleteMany({where:{serviceId:r.id}})]);let l=await u.service.update({where:{id:r.id},data:{name:s,description:t,type:i,category:a,isRecommended:n,recommendOrder:c,durations:{create:d.map(e=>({duration:e.duration,price:e.price}))},masseurs:{create:p.map(e=>({masseur:{connect:{id:e.id}}}))}},include:{durations:!0,masseurs:{include:{masseur:{select:{id:!0,name:!0}}}}}});return o.NextResponse.json(l)}catch(e){return console.error("Error updating service:",e),o.NextResponse.json({error:"Failed to update service"},{status:500})}}async function v(e,{params:r}){try{return await u.$transaction([u.serviceDuration.deleteMany({where:{serviceId:r.id}}),u.masseurService.deleteMany({where:{serviceId:r.id}})]),await u.service.delete({where:{id:r.id}}),o.NextResponse.json({success:!0})}catch(e){return console.error("Error deleting service:",e),o.NextResponse.json({error:"Failed to delete service"},{status:500})}}let m=new i.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/services/[id]/route",pathname:"/api/services/[id]",filename:"route",bundlePath:"app/api/services/[id]/route"},resolvedPagePath:"D:\\projects\\10massage\\src\\app\\api\\services\\[id]\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:x,workUnitAsyncStorage:h,serverHooks:w}=m;function y(){return(0,n.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:h})}},96487:()=>{},78335:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[638,452],()=>s(38432));module.exports=t})();